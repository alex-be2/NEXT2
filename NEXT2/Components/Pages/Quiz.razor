@page "/Quiz/{current_node_id:int}"
@using NEXT2.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@rendermode InteractiveServer
@layout MainLayout

<div class="centre-content container-centre margin-t-50">
    @*progress bar*@
    <div class="progress-b">
        <p>100% complete</p>
    </div>
    @*questions container*@
    <div class="white-container">
        <h2>Section 1</h2>
        <hr />
        @foreach (Question currentQuestion in curr_questions)
        {
            <div style="padding: 30px;">
                <p class="text-l">@currentQuestion.QuestionText</p>
                <div class="container-space-between">
                    @foreach (Answer answer in getAnswers(currentQuestion.QuestionID))
                    {
                        <label class="container">
                            <input type="radio" name="radio" @onclick="() => selectAnswer(answer)">
                            <span class="selection">@answer.AnswerText</span>
                        </label>
                    }
                </div>
            </div>
            <hr />
        }

        <div class="container-space-between height-100">
            <button class="white-button margin-t-50"><i class="fa-solid fa-caret-left"></i> Back</button>
            <button class="white-button margin-t-50" @onclick="NextNode">Next <i class="fa-solid fa-caret-right"></i></button>
        </div>
    </div>
    <br />
</div>

@code {
    [Parameter] public int current_node_id { get; set; }

    private List<Question> curr_questions = new List<Question> { };
    private List<Answer> curr_answers = new List<Answer> { };
    private int[] path1 = [0, 0];
    private int[] path2 = [0, 0];


    protected override async Task OnInitializedAsync()
    {
        getCurrs();

    }
    protected void getCurrs()
    {
        List<Question> all_questions = DbContext.Questions.ToList();
        List<Answer> all_answers = DbContext.Answers.ToList();
        List<Node> all_nodes = DbContext.Nodes.ToList();

        foreach (Node n in all_nodes)
        {
            if (n.NodeID == current_node_id)
            {
                path1[0] = n.Path1;
                path1[1] = n.Path2;

                foreach (Question q in all_questions)
                {
                    if (q.QuestionID == n.q1_id || q.QuestionID == n.q2_id || q.QuestionID == n.q3_id)
                    {
                        curr_questions.Add(q);
                    }
                }
                break;
            }
        }

        foreach (Question q in curr_questions)
        {
            foreach (Answer a in all_answers)
            {
                if (a.QuestionID == q.QuestionID)
                {
                    curr_answers.Add(a);
                }
            }
        }

        // foreach (Answer a in all_answers)
        // {
        //     if (a.QuestionID == curr_questions[0].QuestionID)
        //     {
        //         curr_answers.Add(curr_questions[0].QuestionID, a);
        //     }
        //     else if (a.QuestionID == curr_questions[1].QuestionID)
        //     {
        //         curr_answers.Add(curr_questions[1].QuestionID, a);
        //     }
        //     else if (a.QuestionID == curr_questions[2].QuestionID)
        //     {
        //         curr_answers.Add(curr_questions[2].QuestionID, a);
        //     }
        // }


    }

    protected List<Answer> getAnswers(int q_id)
    {
        List<Answer> answers = new List<Answer> { };

        foreach (Answer a in curr_answers)
        {
            if (a.QuestionID == q_id) { answers.Add(a); }
        }

        return answers;
    }

    protected void NextNode()
    {
        if (path1[1] > path2[1])
        {
            Navigation.NavigateTo($"/Quiz/{path1[0]}");
        }
        else
        {
            Navigation.NavigateTo($"/Quiz/{path2[0]}");
        }

    }

    protected void selectAnswer(Answer a)
    {
        if (a.Path == path1[0])
        {
            path1[1] += 1;
        }
        else if (a.Path == path2[0])
        {
            path2[1] += 1;
        }
    }

}


@*<hr />
    <div style="padding: 30px;">
        <h4 class="text-l">Question 2</h4>
        <p class="text-l">How much experience do you have working in a team?</p>
        <div class="slider-container">
            <div class="container-space-between">
                <p style="width: 10%"> 1</p>
                <p style="width: 10%"> 2</p>
                <p style="width: 10%"> 3</p>
                <p style="width: 10%"> 4</p>
                <p style="width: 10%"> 5</p>
                <p style="width: 10%"> 6</p>
                <p style="width: 10%"> 7</p>
                <p style="width: 10%"> 8</p>
                <p style="width: 10%"> 9</p>
                <p style="width: 10%">10</p>
            </div>
            <input type="range" min="1" max="10" class="slider"/>
        </div>
    </div> *@