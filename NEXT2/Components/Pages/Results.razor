@page "/Results/{sessionID}/{quizComplete}"
@using NEXT2.Components.Layout
@using NEXT2.Components.Models
@layout ResultsLayout
@using NEXT2.Data
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (quizComplete == "True")
{
    <div class="centre-content container-centre margin-t-50">
        <h1 class="text-l">Results </h1>

        @foreach (KeyValuePair<int,Role> kvp in userResults)
        {
            <div class="white-container container-flex">
                <div class="compatibility-bar">
                    <div class="percent">
                        <span>
                        <p style="font-size: 24pt; margin: 0;">@kvp.Key.ToString()</p>
                        <p style="font-size: 24pt; margin: 0;">%</p>
                        </span>
                        <p>compatible</p>
                    </div>
                </div>
                <div>
                    <div class="container-space-between" style="align-items: baseline;">
                        <h3 style="margin-left:15px;">@kvp.Value.RoleName</h3>
                        <a href="@kvp.Value.RoleLink" class="white-button">Apply here</a>
                    </div>
                    <div style="width:600px; padding:15px;">
                        <div class="container-space-between" style="width: 420px">
                            <p>location</p>
                            <p>salary</p>
                            <p>hours</p>
                        </div>
                    </div>
                </div>

            </div>
        }
    </div>

    <div class="centre-content container-centre">

        @if (userID == null)
        {
            <span style=" margin-top:20px">
                <a href="Login" class="margin-t-50 auth-a" style="font-weight:bold;">Log in </a>
                to save your results or 
                <a href="Register" class="margin-t-50 auth-a" style="font-weight:bold;">Register</a>
                if you dont yet have an account.

            </span>
        }
    </div>
}
else if (quizComplete == "False")
{
    <div class="centre-content container-centre">
        <span style="margin-top:20px">
            You have not yet completed the quiz. You can do so
        <a href="" class="margin-t-50 auth-a" style="font-weight:bold;">here</a>.
        </span>
    </div>

    @for (int x = 0; x < 3; x++)
    {
        <div class="centre-content container-centre">
            <span style="margin-top:20px">
                <div class="white-container container-flex">
                    <div class="compatibility-bar-empty">
                        <div class="percent">
                            <p style="font-size: 24pt; margin: 0;">%</p>
                            <p>compatible</p>
                        </div>
                    </div>
                    <div>
                        <div class="container-space-between" style="align-items: baseline;">
                            <div class="skeleton-text skeleton-text-short-tall" style="margin-left: 15px"></div>
                        </div>
                        <div style="width:600px; padding:15px;">
                            <div class="container-space-between" style="width: 420px;">
                                <div class="skeleton-text skeleton-text-short"></div>
                                <div class="skeleton-text skeleton-text-short"></div>
                                <div class="skeleton-text skeleton-text-short"></div>
                            </div>
                            <div class="skeleton-text skeleton-text-long" style="margin-top: 5px;"></div>
                            <div class="skeleton-text skeleton-text-long"></div>
                            <div class="skeleton-text skeleton-text-long"></div>
                        </div>
                    </div>

                </div>
            </span>
        </div>
    }
}


@code {
    private string email;
    private List<User> users = new List<User>();
    private Dictionary<int,Role> userResults = new Dictionary<int,Role>();


    public UserModel userModel = new UserModel();

    [CascadingParameter] public EventCallback<UserModel> userLayout { get;set; }

    protected override void OnInitialized()
    {
        users = DbContext.Users.ToList();
        List<Result> all_Results = DbContext.Results.ToList();
        List<Role> all_Roles = DbContext.Roles.ToList();

        foreach (User user in users)
        {
            if (userID == Convert.ToString(user.userID))
            {
                email = user.Email;
                break;
            }
        }

        Result result = new Result();
        foreach (Result r in all_Results)
        {
            if (r.SessionId == SessionID)
            {
                result = r;
            }
        }

        userResults.Add(result.Role1Score, getRole(result.Role1ID, all_Roles));
        userResults.Add(result.Role2Score, getRole(result.Role2ID, all_Roles));
        userResults.Add(result.Role3Score, getRole(result.Role3ID, all_Roles));

        userModel.userID = userID;
        userModel.email = email;
        userLayout.InvokeAsync(userModel);
    }

    public Role getRole(int roleID, List<Role> all_Roles)
    {
        foreach(Role r in all_Roles)
        {
            if (r.RoleID == roleID)
            {
                return r;
            }
        }
        return new Role();
    }

    [Parameter] public int SessionID { get; set; }
    [Parameter] public string userID { get; set; }
    [Parameter] public string quizComplete { get; set; }
}

