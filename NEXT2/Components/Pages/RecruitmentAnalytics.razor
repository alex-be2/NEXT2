@page "/RecruitmentAnalytics/{user_id:int}"
@using NEXT2.Components.Layout
@using NEXT2.Components.Models
@layout ResultsLayout
@using NEXT2.Data
@inject NavigationManager Navigation
@inject ApplicationDbContext DbContext
@rendermode InteractiveServer

<div style="margin: 50px">

    <h2 class="text-l" style="margin-left: 50px">Recruitment Analytics</h2>

    <div class="container-row">
        <div class="white-container container-column" style="margin: 50px;">
            <h4 class="text-l">Top Departments</h4>
            <hr />
        </div>
        <div class="white-container container-column" style="margin: 50px;">
            <p class="centered-text">Select a department to view its top roles</p>
        </div>
    </div>
    <div class="container-row margin-t-50" >
        <div class="white-container container-column" style="margin: 50px;">
            <h4 class="text-l">Overall Top Roles</h4>
            <hr />
        </div>
        <div class="white-container container-column" style="margin: 50px;">
            <h4 class="text-l">Top Candidates</h4>
            <hr />
        </div>
    </div>
</div>
    


@code {
    [Parameter] public int user_id { get; set; }

    public UserModel userModel = new UserModel();

    [CascadingParameter] public EventCallback<UserModel> userLayout { get; set; }

    private string email;

    private List<User> users = new List<User>();

    private List<Result> results = new List<Result>();


    protected override void OnInitialized()
    {
        users = DbContext.Users.ToList();

        results = DbContext.Results.ToList();

        foreach (User user in users)
        {
            if (user_id == user.userID)
            {
                email = user.Email;
                break;
            }
        }

        userModel.userID = user_id;
        userModel.email = email;
        userLayout.InvokeAsync(userModel);

        foreach (Result r in results)
        {
            
        }



    }

}
